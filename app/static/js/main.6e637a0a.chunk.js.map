{"version":3,"sources":["pages/Welcome.jsx","components/Loading.jsx","pages/AboutMe.jsx","components/TargetProfile.jsx","pages/GitStates.jsx","components/Topic.jsx","components/ProjectCard.jsx","pages/Projects.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Welcome","useState","visible","setVisible","className","id","options","particleOptions","strings","typeSpeed","backSpeed","backDelay","loop","Button","content","primary","onClick","e","console","log","$","target","css","setTimeout","removeAttr","Loading","props","color","width","height","duration","style","AboutMe","Segment","Grid","columns","relaxed","Column","Divider","horizontal","Header","as","Icon","name","mySkills","lang","map","skill","Popup","header","trigger","Image","src","icon","marginRight","margin","frameworks","db","others","vertical","TargetProfile","url","data","username","avatar","location","company","blog","twitter","rel","href","flowing","hoverable","inverted","circular","GitStates","user","setUser","orgs","setOrgs","labels","datasets","backgroundColor","borderColor","borderWidth","pieProps","setPieProps","colorsLang","Java","border","HTML","JavaScript","PHP","CSS","Blade","Shell","SCSS","Batchfile","Python","Hack","C","Default","ChartJS","register","ArcElement","Tooltip","Legend","fetchStats","then","stats","useEffect","a","fetch","process","res","json","fetchData","names","lines","colors","borders","languages","item","push","label","Group","raised","size","followers","public_repos","collaborations","stars","secondary","List","org","index","Item","rounded","Content","Description","description","Topic","ProjectCard","topics","link","Card","wrapped","ui","extra","topic","Projects","linesParticlesOptions","Home","Component","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e637a0a.chunk.js","sourcesContent":["import Particles from \"react-tsparticles\";\r\nimport particleOptions from \"../json/particleOptions.json\";\r\nimport Typed from 'react-typed';\r\nimport $ from \"jquery\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Welcome() {\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    function onClickViewMyProjects(e) {\r\n        console.log(\"DEVELOPING ;)\")\r\n        setVisible(!visible);\r\n        $(e.target).css({\r\n            \"animation\": \"normal 2s hideMyProjectButton ease-out\"\r\n        });\r\n        setTimeout(() => {\r\n            setVisible(true)\r\n            $(e.target).removeAttr(\"style\");\r\n        }, 2001);\r\n    }\r\n\r\n    return (\r\n        <div className=\"welcome-page\">\r\n            <div className=\"background-particles\">\r\n                <Particles\r\n                    id=\"tsparticles\"\r\n                    options={particleOptions}\r\n                />\r\n            </div>\r\n            <p className=\"hello\">Hello, I'm Juan Carlos👋</p>\r\n            <Typed\r\n                strings={[\r\n                    'Full Stack Developer',\r\n                    'Back End Developer',\r\n                    'Front End Developer']}\r\n                typeSpeed={80}\r\n                backSpeed={100}\r\n                backDelay={1500}\r\n                className=\"text-typed\"\r\n                loop >\r\n                <span></span>\r\n            </Typed>\r\n            <Button className=\"view-my-projects\" content=\"View My Projects\" primary onClick={onClickViewMyProjects}></Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Welcome;","\r\nimport { BarWave } from \"react-cssfx-loading\";\r\n\r\nfunction Loading(props) {\r\n\r\n    return (\r\n        <div className=\"loaderBarWave\">\r\n            <BarWave className=\"loader-image\" color={(props.color) ? props.color : \"#FFF\"} width=\"40px\" height=\"30px\" duration=\"1.3s\" />\r\n            <p style={{ color: (props.color) ? props.color : \"#FFF\" }} className=\"loader-content\">Developing</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Loading;","import { Image, Segment, Grid, Divider, Header, Icon, Popup } from \"semantic-ui-react\";\r\n\r\nimport mySkills from \"../json/mySkills.json\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction AboutMe() {\r\n\r\n    return (\r\n        <div className=\"about-me\">\r\n            <Segment color=\"teal\">\r\n                <Grid columns={2} relaxed='very'>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='book' />\r\n                                Skills\r\n                            </Header>\r\n                        </Divider>\r\n                        <div className=\"skills-card\">\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"language\" className=\"marginr\" />\r\n                                Languages\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.lang.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"connectdevelop\" />\r\n                                Frameworks\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.frameworks.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"database\" />\r\n                                Databases\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.db.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"cog\" />\r\n                                Others\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.others.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='address book' />\r\n                                About Me\r\n                            </Header>\r\n                        </Divider>\r\n                        <Loading color=\"white\"/>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        {/* <p>DEVELOPING :)</p>\r\n                        <p>1: Presentacion</p>\r\n                        <p>2: Preferencias de progrmacion</p>\r\n                        <p>3: Experiencia</p> */}\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n                <Divider vertical>and</Divider>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport { Popup, Header, Icon, Image } from \"semantic-ui-react\";\r\n\r\nfunction TargetProfile(props) {\r\n    const url = props.data.url;\r\n    const username = props.data.username;\r\n    const name = props.data.name;\r\n    const avatar = props.data.avatar;\r\n    const location = props.data.location;\r\n    const company = props.data.company;\r\n    const blog = props.data.blog;\r\n    const twitter = props.data.twitter;\r\n\r\n    return (\r\n        <Popup className=\"taget-profile\" trigger={<a target=\"_blank\" rel=\"noreferrer\" href={url}>{username}</a>} flowing hoverable inverted>\r\n            <Header as='h3'><Image src={avatar} circular />{name}</Header>\r\n            <hr />\r\n            <p><Icon name=\"map marker alternate\" color=\"green\" /><b>Location: </b> {location}</p>\r\n            <p><Icon name=\"building\" color=\"violet\" /><b>Company: </b> {company}</p>\r\n            <p><Icon name=\"globe\" color=\"teal\" /><b>Blog: </b> <a href=\"/#\">{blog}</a></p>\r\n            <p><Icon name=\"twitter\" color=\"blue\" /><b>Twitter: </b> <a target=\"_blank\" rel=\"noreferrer\" href={\"https://twitter.com/\" + twitter}>{twitter}</a></p>\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default TargetProfile;","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Segment, Icon, Image, List, Popup, Button } from 'semantic-ui-react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { fetchStats } from 'github-contribution-stats';\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport TargetProfile from \"../components/TargetProfile\";\r\n\r\nfunction GitStates() {\r\n    const [user, setUser] = useState({});\r\n    const [orgs, setOrgs] = useState([]);\r\n    const [pieProps, setPieProps] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [],\r\n                borderColor: [],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    });\r\n    const colorsLang = {\r\n        Java: { color: \"#ff9f405e\", border: \"#ff9f40\" },\r\n        \"C++\": { color: \"#f34b7d5e\", border: \"#f34b7d\" },\r\n        HTML: { color: \"#d15b2a5e\", border: \"#d15b2a\" },\r\n        JavaScript: { color: \"#feda3d5e\", border: \"#feda3d\" },\r\n        PHP: { color: \"#617cbe5e\", border: \"#617cbe\" },\r\n        CSS: { color: \"#563d7c5e\", border: \"#563d7c\" },\r\n        Blade: { color: \"#f7523f5e\", border: \"#f7523f\" },\r\n        Shell: { color: \"#89e0515e\", border: \"#89e051\" },\r\n        SCSS: { color: \"#c6538c5e\", border: \"#c6538c\" },\r\n        Batchfile: { color: \"#c1f12e5e\", border: \"#c1f12e\" },\r\n        Python: { color: \"#3572a55e\", border: \"#3572a5\" },\r\n        Hack: { color: \"#8787875e\", border: \"#878787\" },\r\n        C: { color: \"#5555555e\", border: \"#555555\" },\r\n        Default: { color: \"#ededed52\", border: \"#ededed\" }\r\n    }\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\n    fetchStats('jcsalinas20').then(stats => console.log(stats));\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setUser(await fetch(`${process.env.REACT_APP_API_DOMAIN}/user/get`)\r\n                .then((res) => res.json())\r\n                .then((json) => { return json.user }));\r\n\r\n            setOrgs(await fetch(`${process.env.REACT_APP_API_DOMAIN}/orgs/get`)\r\n                .then((res) => res.json())\r\n                .then((json) => { return json.orgs }));\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let names = [];\r\n        let lines = []\r\n        let colors = [];\r\n        let borders = [];\r\n        if (user.languages) {\r\n            for (const item of user.languages) {\r\n                names.push(item.name);\r\n                lines.push(item.lines);\r\n                if (colorsLang[item.name]) {\r\n                    colors.push(colorsLang[item.name].color);\r\n                    borders.push(colorsLang[item.name].border);\r\n                } else {\r\n                    colors.push(colorsLang.Default.color);\r\n                    borders.push(colorsLang.Default.border);\r\n                }\r\n            }\r\n        }\r\n        setPieProps({\r\n            labels: names,\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes',\r\n                    data: lines,\r\n                    backgroundColor: colors,\r\n                    borderColor: borders,\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        });\r\n    }, [user])\r\n\r\n    return (\r\n        <div className=\"git-states\">\r\n            <Segment color=\"blue\" className=\"github-card\">\r\n                {(!user.username) ? <Loading color=\"white\" /> : \"\"}\r\n                <Header as='h1'>\r\n                    <Icon name='github' inverted />\r\n                    Git States (<TargetProfile data={user} />)\r\n                </Header>\r\n                <Segment.Group horizontal raised className=\"main-data\">\r\n                    <Segment className=\"data image\">\r\n                        <Image src={user.avatar} size=\"small\" circular />\r\n                        {user.name}\r\n                    </Segment>\r\n                    <Segment className=\"data\">\r\n                        <Icon name=\"user\" size=\"small\" color=\"blue\" />\r\n                        {\"Followers: \" + user.followers}\r\n                    </Segment>\r\n                    <Segment className=\"data\">\r\n                        <Icon name=\"box\" size=\"small\" color=\"brown\" />\r\n                        {\"Repositories: \" + user.public_repos}\r\n                    </Segment>\r\n                    <Segment className=\"data\">\r\n                        <Icon name=\"users\" size=\"small\" color=\"green\" />\r\n                        {\"Collaborations: \" + user.collaborations}\r\n                    </Segment>\r\n                    <Segment className=\"data\">\r\n                        <Icon name=\"star\" size=\"small\" color=\"yellow\" />\r\n                        {\"Stars: \" + user.stars}\r\n                    </Segment>\r\n                </Segment.Group>\r\n                <Segment.Group horizontal raised className=\"other-data\">\r\n                    <div className=\"container-arrow left\">\r\n                        <Button secondary icon>\r\n                            <Icon size=\"big\" name=\"arrow alternate circle left outline\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Segment>\r\n                        <Header as=\"h2\" className=\"title\">Organizations</Header>\r\n                        <List>\r\n                            {orgs.map((org, index) => {\r\n                                return (\r\n                                    <List.Item key={index}>\r\n                                        <Popup flowing hoverable trigger={<Image src={org.avatar} size=\"mini\" rounded />} content={org.username} />\r\n                                        <List.Content>\r\n                                            <List.Header as='label'>{org.name}</List.Header>\r\n                                            <List.Description as='label'>{org.description}</List.Description>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Header as=\"h2\" className=\"title\">Languages</Header>\r\n                        <div className=\"pie-container\">\r\n                            {(pieProps) ? <Pie data={pieProps} /> : \"Loading\"}\r\n                        </div>\r\n                    </Segment>\r\n                    <div className=\"container-arrow right\">\r\n                        <Button secondary icon>\r\n                            <Icon size=\"big\" name=\"arrow alternate circle right outline\" />\r\n                        </Button>\r\n                    </div>\r\n                </Segment.Group>\r\n\r\n\r\n                <Segment.Group horizontal raised className=\"other-da\">\r\n                    <div className=\"container-arrow left\">\r\n                        <Button secondary icon>\r\n                            <Icon size=\"big\" name=\"arrow alternate circle left outline\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Segment>\r\n                        <Header as=\"h2\" className=\"title\">Organizations</Header>\r\n                        <Segment className=\"child\">\r\n                            {/* <iframe src=\"https://github.com/users/jcsalinas20/contributions?to=2020-12-31\"></iframe> */}\r\n                        </Segment>\r\n                        <Segment className=\"child\">\r\n                            <Header as=\"h2\" className=\"title\">Languages</Header>\r\n                            <div className=\"pie-container\">\r\n                                {(pieProps) ? <Pie data={pieProps} /> : \"Loading\"}\r\n                            </div>\r\n                        </Segment>\r\n                    </Segment>\r\n                    <div className=\"container-arrow right\">\r\n                        <Button secondary icon>\r\n                            <Icon size=\"big\" name=\"arrow alternate circle right outline\" />\r\n                        </Button>\r\n                    </div>\r\n                </Segment.Group>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GitStates;","function Topic(props) {\r\n    const name = props.name;\r\n\r\n    return <span className=\"topic\">{name}</span>;\r\n}\r\n\r\nexport default Topic;","import { Card, Image, Icon } from \"semantic-ui-react\";\r\n\r\nimport Topic from \"./Topic\";\r\n\r\nfunction ProjectCard(props) {\r\n    const name = props.name;\r\n    const description = props.description;\r\n    const icon = props.icon;\r\n    const stars = props.stars;\r\n    const topics = props.topics;\r\n    const link = props.link;\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Image src='https://is2-ssl.mzstatic.com/image/thumb/Purple115/v4/a5/d7/78/a5d7782e-ea19-f0e7-6af7-97d8611ebfc7/AppIcon-0-1x_U007emarketing-0-7-0-85-220.png/1920x1080bb-80.png' wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Description>{description}</Card.Description>\r\n                <div className=\"stars\">\r\n                    <Icon name=\"star outline\" />{stars}\r\n                </div>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                {\r\n                    topics.map((topic, index) => {\r\n                        return <Topic key={index} name={topic} />\r\n                    })\r\n                }\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import Particles from \"react-tsparticles\";\r\nimport linesParticlesOptions from \"../json/linesParticlesOptions.json\";\r\nimport { Header, Segment, Icon } from 'semantic-ui-react';\r\n\r\nimport ProjectCard from \"../components/ProjectCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction Projects() {\r\n\r\n    return (\r\n        <div className=\"my-projects\">\r\n            <Header as='h1'>\r\n                <Icon name='github' />\r\n                My Projects\r\n            </Header>\r\n            <Segment color=\"blue\" className=\"projects\">\r\n                <Loading color=\"white\"/>\r\n                <div className=\"background-particles\">\r\n                    <Particles\r\n                        id=\"tsparticles2\"\r\n                        options={linesParticlesOptions}\r\n                    />\r\n                </div>\r\n                <ProjectCard description=\"App for download tiktok videos\" stars=\"5\" topics={[\"Java\", \"JavaFX\", \"TikTok\"]} />\r\n                <ProjectCard description=\"App for download tiktok videos\" stars=\"5\" topics={[\"Java\", \"JavaFX\", \"TikTok\"]} />\r\n                <ProjectCard description=\"App for download tiktok videos\" stars=\"5\" topics={[\"Java\", \"JavaFX\", \"TikTok\"]} />\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport GitStates from \"./GitStates\";\r\nimport Projects from \"./Projects\";\r\n\r\nimport \"./_home.scss\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Welcome />\r\n                <AboutMe />\r\n                <GitStates />\r\n                <Projects />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/:something\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}