{"version":3,"sources":["pages/Welcome.jsx","components/Loading.jsx","pages/AboutMe.jsx","components/TargetProfile.jsx","pages/GitStates.jsx","components/Topic.jsx","components/ProjectCard.jsx","pages/Projects.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Welcome","useState","visible","setVisible","className","id","options","particleOptions","strings","typeSpeed","backSpeed","backDelay","loop","Button","content","primary","onClick","e","console","log","$","target","css","setTimeout","removeAttr","Loading","props","color","width","height","duration","style","AboutMe","Segment","Grid","columns","relaxed","Column","Divider","horizontal","Header","as","Icon","name","mySkills","lang","map","skill","Popup","header","trigger","Image","src","icon","marginRight","margin","frameworks","db","others","vertical","TargetProfile","url","data","username","avatar","location","company","blog","website","twitter","rel","href","flowing","hoverable","inverted","circular","GitStates","semaforCarousel","setSemaforCarousel","user","setUser","orgs","setOrgs","svg2020","setSvg2020","svg2021","setSvg2021","svg2022","setSvg2022","error503","setError503","labels","datasets","backgroundColor","borderColor","borderWidth","pieProps","setPieProps","ChartJS","register","ArcElement","Tooltip","Legend","useEffect","a","fetch","process","then","res","json","status","svg","fetchData","names","sizes","colors","borders","languages","item","push","size","label","Group","raised","followers","repos","public","collabs","stars","List","org","index","Item","rounded","Content","Description","description","secondary","year","html","dangerouslySetInnerHTML","__html","Topic","ProjectCard","repo","length","substring","banner","topics","link","Card","wrapped","ui","title","extra","topic","Projects","setRepos","basicRepos","setBasicRepos","Input","disabled","iconPosition","placeholder","Dropdown","fluid","selection","key","text","value","image","clearable","multiple","search","flag","Home","Component","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b39618bd.chunk.js","sourcesContent":["import Particles from \"react-tsparticles\";\r\nimport particleOptions from \"../json/particleOptions.json\";\r\nimport Typed from 'react-typed';\r\nimport $ from \"jquery\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Welcome() {\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    function onClickViewMyProjects(e) {\r\n        console.log(\"DEVELOPING ;)\")\r\n        setVisible(!visible);\r\n        $(e.target).css({\r\n            \"animation\": \"normal 2s hideMyProjectButton ease-out\"\r\n        });\r\n        setTimeout(() => {\r\n            setVisible(true)\r\n            $(e.target).removeAttr(\"style\");\r\n        }, 2001);\r\n    }\r\n\r\n    return (\r\n        <div className=\"welcome-page\">\r\n            <div className=\"background-particles\">\r\n                <Particles\r\n                    id=\"tsparticles\"\r\n                    options={particleOptions}\r\n                />\r\n            </div>\r\n            <p className=\"hello\">Hello, I'm Juan Carlos👋</p>\r\n            <Typed\r\n                strings={[\r\n                    'Full Stack Developer',\r\n                    'Back End Developer',\r\n                    'Front End Developer']}\r\n                typeSpeed={80}\r\n                backSpeed={100}\r\n                backDelay={1500}\r\n                className=\"text-typed\"\r\n                loop >\r\n                <span></span>\r\n            </Typed>\r\n            <Button className=\"view-my-projects\" content=\"View My Projects\" primary onClick={onClickViewMyProjects}></Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Welcome;","\r\nimport { BarWave } from \"react-cssfx-loading\";\r\n\r\nfunction Loading(props) {\r\n\r\n    return (\r\n        <div className=\"loaderBarWave\">\r\n            <BarWave className=\"loader-image\" color={(props.color) ? props.color : \"#FFF\"} width=\"40px\" height=\"30px\" duration=\"1.3s\" />\r\n            <p style={{ color: (props.color) ? props.color : \"#FFF\" }} className=\"loader-content\">Developing</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Loading;","import { Image, Segment, Grid, Divider, Header, Icon, Popup } from \"semantic-ui-react\";\r\n\r\nimport mySkills from \"../json/mySkills.json\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction AboutMe() {\r\n\r\n    return (\r\n        <div className=\"about-me\">\r\n            <Segment color=\"teal\">\r\n                <Grid columns={2} relaxed='very'>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='book' />\r\n                                Skills\r\n                            </Header>\r\n                        </Divider>\r\n                        <div className=\"skills-card\">\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"language\" className=\"marginr\" />\r\n                                Languages\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.lang.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"connectdevelop\" />\r\n                                Frameworks\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.frameworks.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"database\" />\r\n                                Databases\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.db.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"cog\" />\r\n                                Others\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.others.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='address book' />\r\n                                About Me\r\n                            </Header>\r\n                        </Divider>\r\n                        <Loading color=\"white\"/>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        {/* <p>DEVELOPING :)</p>\r\n                        <p>1: Presentacion</p>\r\n                        <p>2: Preferencias de progrmacion</p>\r\n                        <p>3: Experiencia</p> */}\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n                <Divider vertical>and</Divider>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport { Popup, Header, Icon, Image } from \"semantic-ui-react\";\r\n\r\nfunction TargetProfile(props) {\r\n    const url = props.data.url;\r\n    const username = props.data.username;\r\n    const name = props.data.name;\r\n    const avatar = props.data.avatar;\r\n    const location = props.data.location;\r\n    const company = props.data.company;\r\n    const blog = props.data.website;\r\n    const twitter = props.data.twitter;\r\n\r\n    return (\r\n        <Popup className=\"taget-profile\" trigger={<a target=\"_blank\" rel=\"noreferrer\" href={url}>{username}</a>} flowing hoverable inverted>\r\n            <Header as='h3'><Image src={avatar} circular />{name}</Header>\r\n            <hr />\r\n            <p><Icon name=\"map marker alternate\" color=\"green\" /><b>Location: </b> {location}</p>\r\n            <p><Icon name=\"building\" color=\"violet\" /><b>Company: </b> {company}</p>\r\n            <p><Icon name=\"globe\" color=\"teal\" /><b>Blog: </b> <a href=\"/#\">{blog}</a></p>\r\n            <p><Icon name=\"twitter\" color=\"blue\" /><b>Twitter: </b> <a target=\"_blank\" rel=\"noreferrer\" href={\"https://twitter.com/\" + twitter}>{twitter}</a></p>\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default TargetProfile;","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Segment, Icon, Image, List, Popup, Button } from 'semantic-ui-react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport GitHubCalendar from 'react-github-calendar';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport Card503 from \"../components/Card503\";\r\nimport TargetProfile from \"../components/TargetProfile\";\r\n\r\nfunction GitStates() {\r\n    const [semaforCarousel, setSemaforCarousel] = useState(true);\r\n    const [user, setUser] = useState({});\r\n    const [orgs, setOrgs] = useState([]);\r\n    const [svg2020, setSvg2020] = useState(\"\");\r\n    const [svg2021, setSvg2021] = useState(\"\");\r\n    const [svg2022, setSvg2022] = useState(\"\");\r\n    const [error503, setError503] = useState(false);\r\n    const [pieProps, setPieProps] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [],\r\n                borderColor: [],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    });\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setUser(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}`)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    if (json.status) {\r\n                        setError503(true);\r\n                        return {};\r\n                    }\r\n                    return json.user;\r\n                }));\r\n            if (!error503) {\r\n                setOrgs(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/orgs`)\r\n                    .then((res) => res.json())\r\n                    .then((json) => { return json.orgs }));\r\n                await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/stats`)\r\n                    .then(res => res.json())\r\n                    .then((json) => {\r\n                        setSvg2020(json.svg[2020]);\r\n                        setSvg2021(json.svg[2021]); \r\n                        setSvg2022(json.svg[2022]);\r\n                    });\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let names = [];\r\n        let sizes = []\r\n        let colors = [];\r\n        let borders = [];\r\n        if (user.languages) {\r\n            for (const item of user.languages) {\r\n                names.push(item.name);\r\n                sizes.push(item.size);\r\n                colors.push(item.color + \"5e\");\r\n                borders.push(item.color);\r\n            }\r\n        }\r\n        setPieProps({\r\n            labels: names,\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes',\r\n                    data: sizes,\r\n                    backgroundColor: colors,\r\n                    borderColor: borders,\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        });\r\n    }, [user]);\r\n\r\n    return (\r\n        <div className=\"git-states\">\r\n            {(user.username) ?\r\n                <Segment color=\"blue\" className=\"github-card\">\r\n                    {(!user.username) ? <Loading color=\"white\" /> : \"\"}\r\n                    <Header as='h1'>\r\n                        <Icon name='github' inverted />\r\n                        Git States (<TargetProfile data={user} />)\r\n                    </Header>\r\n                    <Segment.Group horizontal raised className=\"main-data\">\r\n                        <Segment className=\"data image\">\r\n                            <Image src={user.avatar} size=\"small\" circular />\r\n                            {user.name}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"user\" size=\"small\" color=\"blue\" />\r\n                            {\"Followers: \" + user.followers}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"box\" size=\"small\" color=\"brown\" />\r\n                            {\"Repositories: \" + user.repos.public}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"users\" size=\"small\" color=\"green\" />\r\n                            {\"Collaborations: \" + user.collabs.public}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"star\" size=\"small\" color=\"yellow\" />\r\n                            {\"Stars: \" + user.stars.public}\r\n                        </Segment>\r\n                    </Segment.Group>\r\n                    {(semaforCarousel) ?\r\n                        <Segment.Group horizontal raised className=\"other-data\">\r\n                            <Segment className=\"left-seg\">\r\n                                <Header as=\"h2\" className=\"title\">Organizations</Header>\r\n                                <List>\r\n                                    {orgs.map((org, index) => {\r\n                                        return (\r\n                                            <List.Item key={index}>\r\n                                                <Popup flowing hoverable trigger={<Image src={org.avatar} size=\"mini\" rounded />} content={org.username} />\r\n                                                <List.Content>\r\n                                                    <List.Header as='label'>{org.name}</List.Header>\r\n                                                    <List.Description as='label'>{org.description}</List.Description>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </Segment>\r\n                            <Segment className=\"right-seg\">\r\n                                <Header as=\"h2\" className=\"title\">Languages</Header>\r\n                                <div className=\"pie-container\">\r\n                                    {(pieProps) ? <Pie data={pieProps} /> : \"Loading\"}\r\n                                </div>\r\n                            </Segment>\r\n                            <div className=\"container-arrow right\" onClick={() => { setSemaforCarousel(!semaforCarousel) }}>\r\n                                <Button secondary icon>\r\n                                    <Icon size=\"big\" name=\"arrow alternate circle right outline\" />\r\n                                </Button>\r\n                            </div>\r\n                        </Segment.Group>\r\n                        :\r\n                        <Segment.Group horizontal raised className=\"other-data-part2\">\r\n                            <div className=\"container-arrow left\" onClick={() => { setSemaforCarousel(!semaforCarousel) }}>\r\n                                <Button secondary icon>\r\n                                    <Icon size=\"big\" name=\"arrow alternate circle left outline\" />\r\n                                </Button>\r\n                            </div>\r\n                            <Segment className=\"single-seg\">\r\n                                <Header as=\"h2\" className=\"title\">Stats</Header>\r\n                                <Segment className=\"child-contributions\">\r\n                                    <Header as='h3' className=\"subtitle\">\r\n                                        <Icon name=\"calendar alternate outline\" />Year: 2022\r\n                                    </Header>\r\n                                    <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2022} >\r\n                                        <ReactTooltip html />\r\n                                    </GitHubCalendar>\r\n                                    <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2022 }}></div>\r\n                                    <hr />\r\n                                    <Header as='h3' className=\"subtitle\">\r\n                                        <Icon name=\"calendar alternate outline\" />Year: 2021\r\n                                    </Header>\r\n                                    <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2021} >\r\n                                        <ReactTooltip html />\r\n                                    </GitHubCalendar>\r\n                                    <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2021 }}></div>\r\n                                    <hr />\r\n                                    <Header as='h3' className=\"subtitle\">\r\n                                        <Icon name=\"calendar alternate outline\" />Year: 2020\r\n                                    </Header>\r\n                                    <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2020} >\r\n                                        <ReactTooltip html />\r\n                                    </GitHubCalendar>\r\n                                    <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2020 }}></div>\r\n                                </Segment>\r\n                            </Segment>\r\n                        </Segment.Group>\r\n                    }\r\n                </Segment>\r\n                : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GitStates;","function Topic(props) {\r\n    const name = props.name;\r\n\r\n    return <span className=\"topic\">{name}</span>;\r\n}\r\n\r\nexport default Topic;","import { Card, Image, Icon } from \"semantic-ui-react\";\r\n\r\nimport Topic from \"./Topic\";\r\n\r\nfunction ProjectCard(props) {\r\n    const repo = props.repo;\r\n    const name = repo.name;\r\n    const description = (repo.description) ? (repo.description.length > 55) ? repo.description.substring(0, 55) + \"...\" : repo.description : \"Without description\";\r\n    const banner = (repo.banner) ? repo.banner : \"https://is2-ssl.mzstatic.com/image/thumb/Purple115/v4/a5/d7/78/a5d7782e-ea19-f0e7-6af7-97d8611ebfc7/AppIcon-0-1x_U007emarketing-0-7-0-85-220.png/1920x1080bb-80.png\";\r\n    const stars = repo.stars;\r\n    const topics = repo.topics;\r\n    const link = repo.link;\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <div className=\"image\">\r\n                <Image src={banner} wrapped ui={false} />\r\n                <p>{name}</p>\r\n            </div>\r\n            <Card.Content>\r\n                <Card.Description title={repo.description}>{description}</Card.Description>\r\n                <div className=\"stars\">\r\n                    <Icon name=\"star outline\" />{stars}\r\n                </div>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                {\r\n                    topics.map((topic, index) => {\r\n                        return <Topic key={index} name={topic} />\r\n                    })\r\n                }\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import { useEffect, useState } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport linesParticlesOptions from \"../json/linesParticlesOptions.json\";\r\nimport { Header, Segment, Icon, Input, Dropdown } from 'semantic-ui-react';\r\n\r\nimport ProjectCard from \"../components/ProjectCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction Projects() {\r\n    const [repos, setRepos] = useState([]);\r\n    const [basicRepos, setBasicRepos] = useState([]);\r\n    const [error503, setError503] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setBasicRepos(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/repos/basic`)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    if (json.status) {\r\n                        setError503(true);\r\n                        return {};\r\n                    }\r\n                    return json.repos;\r\n                })\r\n            );\r\n            if (!error503) {\r\n                setRepos(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/repos/basic`)\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                        return json.repos;\r\n                    })\r\n                );\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // console.log(\"basic\", basicRepos);\r\n    // console.log(\"all\", repos);\r\n\r\n    const friendOptions = [\r\n        {\r\n            key: 'Jenny Hess',\r\n            text: 'Jenny Hess',\r\n            value: 'Jenny Hess',\r\n            image: { avatar: true, src: '/images/avatar/small/jenny.jpg' },\r\n        },\r\n        {\r\n            key: 'Elliot Fu',\r\n            text: 'Elliot Fu',\r\n            value: 'Elliot Fu',\r\n            image: { avatar: true, src: '/images/avatar/small/elliot.jpg' },\r\n        },\r\n        {\r\n            key: 'Stevie Feliciano',\r\n            text: 'Stevie Feliciano',\r\n            value: 'Stevie Feliciano',\r\n            image: { avatar: true, src: '/images/avatar/small/stevie.jpg' },\r\n        },\r\n        {\r\n            key: 'Christian',\r\n            text: 'Christian',\r\n            value: 'Christian',\r\n            image: { avatar: true, src: '/images/avatar/small/christian.jpg' },\r\n        },\r\n        {\r\n            key: 'Matt',\r\n            text: 'Matt',\r\n            value: 'Matt',\r\n            image: { avatar: true, src: '/images/avatar/small/matt.jpg' },\r\n        },\r\n        {\r\n            key: 'Justen Kitsune',\r\n            text: 'Justen Kitsune',\r\n            value: 'Justen Kitsune',\r\n            image: { avatar: true, src: '/images/avatar/small/justen.jpg' },\r\n        },\r\n    ]\r\n    const countryOptions = [\r\n        { key: 'af', value: 'af', flag: 'af', text: 'Afghanistan' },\r\n        { key: 'ax', value: 'ax', flag: 'ax', text: 'Aland Islands' },\r\n        { key: 'al', value: 'al', flag: 'al', text: 'Albania' },\r\n        { key: 'dz', value: 'dz', flag: 'dz', text: 'Algeria' },\r\n        { key: 'as', value: 'as', flag: 'as', text: 'American Samoa' },\r\n        { key: 'ad', value: 'ad', flag: 'ad', text: 'Andorra' },\r\n        { key: 'ao', value: 'ao', flag: 'ao', text: 'Angola' },\r\n        { key: 'ai', value: 'ai', flag: 'ai', text: 'Anguilla' },\r\n        { key: 'ag', value: 'ag', flag: 'ag', text: 'Antigua' },\r\n        { key: 'ar', value: 'ar', flag: 'ar', text: 'Argentina' },\r\n        { key: 'am', value: 'am', flag: 'am', text: 'Armenia' },\r\n        { key: 'aw', value: 'aw', flag: 'aw', text: 'Aruba' },\r\n        { key: 'au', value: 'au', flag: 'au', text: 'Australia' },\r\n        { key: 'at', value: 'at', flag: 'at', text: 'Austria' },\r\n        { key: 'az', value: 'az', flag: 'az', text: 'Azerbaijan' },\r\n        { key: 'bs', value: 'bs', flag: 'bs', text: 'Bahamas' },\r\n        { key: 'bh', value: 'bh', flag: 'bh', text: 'Bahrain' },\r\n        { key: 'bd', value: 'bd', flag: 'bd', text: 'Bangladesh' },\r\n        { key: 'bb', value: 'bb', flag: 'bb', text: 'Barbados' },\r\n        { key: 'by', value: 'by', flag: 'by', text: 'Belarus' },\r\n        { key: 'be', value: 'be', flag: 'be', text: 'Belgium' },\r\n        { key: 'bz', value: 'bz', flag: 'bz', text: 'Belize' },\r\n        { key: 'bj', value: 'bj', flag: 'bj', text: 'Benin' },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"my-projects\">\r\n            <Header as='h1'>\r\n                <div className=\"title\">\r\n                    <Icon name='github' />\r\n                    My Projects\r\n                </div>\r\n                <div className=\"search\">\r\n                    <Input disabled icon=\"search\" iconPosition=\"left\" size=\"mini\" placeholder=\"Search by name\" />\r\n                </div>\r\n                <div className=\"filter\">\r\n                    <Dropdown\r\n                        disabled\r\n                        placeholder='Select Filter'\r\n                        fluid\r\n                        selection\r\n                        options={friendOptions}\r\n                    />\r\n                    <Dropdown\r\n                        disabled\r\n                        clearable\r\n                        fluid\r\n                        multiple\r\n                        search\r\n                        selection\r\n                        options={countryOptions}\r\n                        placeholder='Select Country'\r\n                    />\r\n                </div>\r\n            </Header>\r\n            <Segment color=\"blue\" className=\"projects\">\r\n                {/* <Loading color=\"white\" /> */}\r\n                <div className=\"background-particles\">\r\n                    {/* {(repos) ? \r\n                        <Particles\r\n                            id=\"tsparticles2\"\r\n                            options={linesParticlesOptions}\r\n                        />\r\n                        : \"\"\r\n                    } */}\r\n                    {basicRepos.map((repo, key) => {\r\n                        return (\r\n                            <ProjectCard\r\n                                key={key}\r\n                                repo={repo}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport GitStates from \"./GitStates\";\r\nimport Projects from \"./Projects\";\r\n\r\nimport \"./_home.scss\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Welcome />\r\n                <AboutMe />\r\n                <GitStates />\r\n                <Projects />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/:something\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}