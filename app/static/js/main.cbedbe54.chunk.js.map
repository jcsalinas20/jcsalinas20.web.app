{"version":3,"sources":["pages/Welcome.jsx","components/Loading.jsx","pages/AboutMe.jsx","components/TargetProfile.jsx","pages/GitStates.jsx","components/Topic.jsx","components/ProjectCard.jsx","pages/Projects.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Welcome","visible","setVisible","useState","_jsxs","className","children","_jsx","Particles","id","options","particleOptions","Typed","strings","typeSpeed","backSpeed","backDelay","loop","Button","content","primary","onClick","e","console","log","$","target","css","setTimeout","removeAttr","Loading","props","BarWave","color","width","height","duration","style","AboutMe","Segment","Grid","columns","relaxed","Column","Divider","horizontal","Header","as","Icon","name","mySkills","lang","map","skill","Popup","header","trigger","Image","src","icon","marginRight","margin","frameworks","db","others","vertical","TargetProfile","url","data","username","avatar","location","company","blog","website","twitter","rel","href","flowing","hoverable","inverted","circular","GitStates","semaforCarousel","setSemaforCarousel","user","setUser","orgs","setOrgs","yearsSvg","setYearsSvg","error503","setError503","pieProps","setPieProps","labels","datasets","backgroundColor","borderColor","borderWidth","ChartJS","register","ArcElement","Tooltip","Legend","useEffect","endYear","moment","year","async","fetch","concat","process","headers","Authorization","then","res","json","status","svg","fetchData","names","sizes","colors","borders","languages","item","push","size","label","Placeholder","Line","length","Group","raised","_Fragment","followers","repos","public","collabs","stars","borderRadius","square","Loader","active","right","left","List","Item","Content","position","org","index","rounded","Description","description","backgroundImage","Pie","secondary","Object","keys","i","GitHubCalendar","ReactTooltip","html","dangerouslySetInnerHTML","__html","rectangular","Topic","ProjectCard","repo","banner","topics","link","placeholder","substring","Card","wrapped","ui","title","extra","topic","Projects","setRepos","filter","setFilter","basicRepos","setBasicRepos","searcher","setSearcher","selectedFilterType","setSelectedFilterType","validOption","filterOptions","text","key","toLowerCase","value","type","isarchived","issues","filterTypeOptions","onHandleChangeFilterOptions","arrayRepos","indexOf","check","some","isArchived","releases","total","sort","a","b","Input","iconPosition","onChange","includes","Dropdown","fluid","selection","defaultValue","undefined","loading","disabled","clearable","multiple","search","Home","Component","render","App","Router","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cbedbe54.chunk.js","sourcesContent":["import Particles from \"react-tsparticles\";\r\nimport particleOptions from \"../json/particleOptions.json\";\r\nimport Typed from 'react-typed';\r\nimport $ from \"jquery\";\r\n\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Welcome() {\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    function onClickViewMyProjects(e) {\r\n        console.log(\"DEVELOPING ;)\")\r\n        setVisible(!visible);\r\n        $(e.target).css({\r\n            \"animation\": \"normal 1s hideMyProjectButton ease-out\"\r\n        });\r\n        setTimeout(() => {\r\n            setVisible(true)\r\n            $(e.target).removeAttr(\"style\");\r\n        }, 2001);\r\n    }\r\n\r\n    return (\r\n        <div className=\"welcome-page\">\r\n            <div className=\"background-particles\">\r\n                <Particles\r\n                    id=\"tsparticles\"\r\n                    options={particleOptions}\r\n                />\r\n            </div>\r\n            <p className=\"hello\">Hello, I'm Juan Carlos👋</p>\r\n            <Typed\r\n                strings={[\r\n                    'Full Stack Developer',\r\n                    'Back End Developer',\r\n                    'Front End Developer']}\r\n                typeSpeed={80}\r\n                backSpeed={100}\r\n                backDelay={1500}\r\n                className=\"text-typed\"\r\n                loop >\r\n                <span></span>\r\n            </Typed>\r\n            <Button className=\"view-my-projects\" content=\"View My Projects\" primary onClick={onClickViewMyProjects}></Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Welcome;","\r\nimport { BarWave } from \"react-cssfx-loading\";\r\n\r\nfunction Loading(props) {\r\n\r\n    return (\r\n        <div className=\"loaderBarWave\">\r\n            <BarWave className=\"loader-image\" color={(props.color) ? props.color : \"#FFF\"} width=\"40px\" height=\"30px\" duration=\"1.3s\" />\r\n            <p style={{ color: (props.color) ? props.color : \"#FFF\" }} className=\"loader-content\">Developing</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Loading;","import { Image, Segment, Grid, Divider, Header, Icon, Popup } from \"semantic-ui-react\";\r\n\r\nimport mySkills from \"../json/mySkills.json\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction AboutMe() {\r\n\r\n    return (\r\n        <div className=\"about-me\">\r\n            <Segment color=\"teal\">\r\n                <Grid columns={2} relaxed='very'>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='book' />\r\n                                Skills\r\n                            </Header>\r\n                        </Divider>\r\n                        <div className=\"skills-card\">\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"language\" className=\"marginr\" />\r\n                                Languages\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.lang.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"connectdevelop\" />\r\n                                Frameworks\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.frameworks.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"database\" />\r\n                                Databases\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.db.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <h3 className=\"subtitle-skills\">\r\n                                <Icon name=\"cog\" />\r\n                                Others\r\n                                <div className=\"arrow-up left-side\"></div>\r\n                                <div className=\"arrow-up right-side\"></div>\r\n                            </h3>\r\n                            <div className=\"group-images-skills\">\r\n                                {mySkills.others.map((skill) => (\r\n                                    <Popup\r\n                                        key={skill.name}\r\n                                        header={skill.name}\r\n                                        trigger={<Image src={skill.icon} style={{ width: skill.width, height: skill.height, marginRight: (skill.margin) ? \"5px\" : \"0px\" }} />}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Divider horizontal>\r\n                            <Header as='h2'>\r\n                                <Icon name='address book' />\r\n                                About Me\r\n                            </Header>\r\n                        </Divider>\r\n                        <Loading color=\"white\"/>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        <p>\r\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                        </p>\r\n                        {/* <p>DEVELOPING :)</p>\r\n                        <p>1: Presentacion</p>\r\n                        <p>2: Preferencias de progrmacion</p>\r\n                        <p>3: Experiencia</p> */}\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n                <Divider vertical>and</Divider>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport { Popup, Header, Icon, Image } from \"semantic-ui-react\";\r\n\r\nfunction TargetProfile(props) {\r\n    const url = props.data.url;\r\n    const username = props.data.username;\r\n    const name = props.data.name;\r\n    const avatar = props.data.avatar;\r\n    const location = props.data.location;\r\n    const company = props.data.company;\r\n    const blog = props.data.website;\r\n    const twitter = props.data.twitter;\r\n\r\n    return (\r\n        <Popup className=\"taget-profile\" trigger={<a target=\"_blank\" rel=\"noreferrer\" href={url}>{username}</a>} flowing hoverable inverted>\r\n            <Header as='h3'><Image src={avatar} circular />{name}</Header>\r\n            <hr />\r\n            <p><Icon name=\"map marker alternate\" color=\"green\" /><b>Location: </b> {location}</p>\r\n            <p><Icon name=\"building\" color=\"violet\" /><b>Company: </b> {company}</p>\r\n            <p><Icon name=\"globe\" color=\"teal\" /><b>Blog: </b> <a href=\"/#\">{blog}</a></p>\r\n            <p><Icon name=\"twitter\" color=\"blue\" /><b>Twitter: </b> <a target=\"_blank\" rel=\"noreferrer\" href={\"https://twitter.com/\" + twitter}>{twitter}</a></p>\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default TargetProfile;","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Segment, Icon, Image, List, Popup, Button, Placeholder, Loader } from 'semantic-ui-react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport GitHubCalendar from 'react-github-calendar';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport moment from \"moment\";\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport Card503 from \"../components/Card503\";\r\nimport TargetProfile from \"../components/TargetProfile\";\r\n\r\nfunction GitStates() {\r\n    const [semaforCarousel, setSemaforCarousel] = useState(true);\r\n    const [user, setUser] = useState({});\r\n    const [orgs, setOrgs] = useState([]);\r\n    const [yearsSvg, setYearsSvg] = useState({});\r\n    // const [svg2020, setSvg2020] = useState(\"\");\r\n    // const [svg2021, setSvg2021] = useState(\"\");\r\n    // const [svg2022, setSvg2022] = useState(\"\");\r\n    const [error503, setError503] = useState(false);\r\n    const [pieProps, setPieProps] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [],\r\n                borderColor: [],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    });\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setUser(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}`, {\r\n                headers: { Authorization: `${process.env.REACT_APP_JWT_API}` }\r\n            })\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    if (json.status) {\r\n                        setError503(true);\r\n                        return {};\r\n                    }\r\n                    return json.user;\r\n                }));\r\n            if (!error503) {\r\n                setOrgs(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/orgs`, {\r\n                    headers: { Authorization: `${process.env.REACT_APP_JWT_API}` }\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((json) => { return json.orgs }));\r\n                await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/stats`, {\r\n                    headers: { Authorization: `${process.env.REACT_APP_JWT_API}` }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((json) => {\r\n                        setYearsSvg(json.svg);\r\n                    });\r\n            }\r\n        }\r\n        \r\n        const startYear = 2020;\r\n        const endYear = moment().year();\r\n    \r\n        for(var year = startYear; year <= endYear; year++) {\r\n            yearsSvg[year] = \"\";\r\n        }\r\n        console.log(yearsSvg);\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let names = [];\r\n        let sizes = []\r\n        let colors = [];\r\n        let borders = [];\r\n        if (user.languages) {\r\n            for (const item of user.languages) {\r\n                names.push(item.name);\r\n                sizes.push(item.size);\r\n                colors.push(item.color + \"5e\");\r\n                borders.push(item.color);\r\n            }\r\n        }\r\n        setPieProps({\r\n            labels: names,\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes',\r\n                    data: sizes,\r\n                    backgroundColor: colors,\r\n                    borderColor: borders,\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        });\r\n    }, [user]);\r\n\r\n    return (\r\n        <div className=\"git-states\">\r\n            <Segment color=\"blue\" className=\"github-card\">\r\n                <Header as='h1'>\r\n                    <Icon name='github' inverted />\r\n                    Git States (\r\n                    { (!user.username) ?\r\n                        <Placeholder style={{width: \"100px\", height: \"38px\"}}>\r\n                            <Placeholder.Line length='full' style={{height: \"auto\"}} />\r\n                        </Placeholder>\r\n                    :\r\n                        <TargetProfile data={user} />\r\n                    }\r\n                    )\r\n                </Header>\r\n                <Segment.Group horizontal raised className=\"main-data\">\r\n                    { (!user.username) ?\r\n                    <>\r\n                        <Segment className=\"data image\">\r\n                            <Placeholder style={{borderRadius: \"500rem\"}}>\r\n                                <Placeholder.Image square style={{width: \"150px\", borderRadius: \"500rem\"}} />\r\n                            </Placeholder>\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"user\" size=\"small\" color=\"blue\" />\r\n                            {\"Followers: \"} <Loader active style={{right: \"0\", left: \"auto\"}}/>\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"box\" size=\"small\" color=\"brown\" />\r\n                            {\"Repositories: \"} <Loader active style={{right: \"0\", left: \"auto\"}}/>\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"users\" size=\"small\" color=\"green\" />\r\n                            {\"Collaborations: \"} <Loader active style={{right: \"0\", left: \"auto\"}}/>\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"star\" size=\"small\" color=\"yellow\" />\r\n                            {\"Stars: \"} <Loader active style={{right: \"0\", left: \"auto\"}}/>\r\n                        </Segment>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Segment className=\"data image\">\r\n                            <Image src={user.avatar} size=\"small\" circular />\r\n                            {user.name}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"user\" size=\"small\" color=\"blue\" />\r\n                            {\"Followers: \" + user.followers}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"box\" size=\"small\" color=\"brown\" />\r\n                            {\"Repositories: \" + user.repos.public}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"users\" size=\"small\" color=\"green\" />\r\n                            {\"Collaborations: \" + user.collabs.public}\r\n                        </Segment>\r\n                        <Segment className=\"data\">\r\n                            <Icon name=\"star\" size=\"small\" color=\"yellow\" />\r\n                            {\"Stars: \" + user.stars.public}\r\n                        </Segment>\r\n                    </>\r\n                    }\r\n                </Segment.Group>\r\n                {(semaforCarousel) ?\r\n                    <Segment.Group horizontal raised className=\"other-data\">\r\n                        <Segment className=\"left-seg\">\r\n                            <Header as=\"h2\" className=\"title\">Organizations</Header>\r\n                            <List>\r\n                                {(orgs.length === 0) ? \r\n                                <>\r\n                                    <List.Item key={0}>\r\n                                        <List.Content style={{height: \"28px\"}}>\r\n                                            <Loader active style={{position: \"relative\"}}/>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item key={1}>\r\n                                        <List.Content style={{height: \"28px\"}}>\r\n                                            <Loader active style={{position: \"relative\"}}/>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item key={2}>\r\n                                        <List.Content style={{height: \"28px\"}}>\r\n                                            <Loader active style={{position: \"relative\"}}/>\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                </>\r\n                                :\r\n                                orgs.map((org, index) => {\r\n                                    return (\r\n                                        <List.Item key={index}>\r\n                                            <Popup flowing hoverable trigger={<Image src={org.avatar} size=\"mini\" rounded />} content={org.username} />\r\n                                            <List.Content>\r\n                                                <List.Header as='label'>{org.name}</List.Header>\r\n                                                <List.Description as='label'>{org.description}</List.Description>\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                    );\r\n                                })\r\n                                }\r\n                            </List>\r\n                        </Segment>\r\n                        <Segment className=\"right-seg\">\r\n                            <Header as=\"h2\" className=\"title\">Languages</Header>\r\n                            <div className=\"pie-container\">\r\n                                {(pieProps.labels.length === 0) ?\r\n                                <>\r\n                                    <Placeholder style={{backgroundImage: \"linear-gradient(to right,rgb(0 0 0 / 19%) 0,rgb(0 0 0) 15%,rgb(0 0 0) 30%)\"}}>\r\n                                        <Placeholder.Line style={{backgroundColor: \"#1a1f26\"}} />\r\n                                        <Placeholder.Line style={{backgroundColor: \"#1a1f26\"}} />\r\n                                        <Placeholder.Line style={{backgroundColor: \"#1a1f26\"}} />\r\n                                    </Placeholder>\r\n                                    <Placeholder className=\"pie-loading\">\r\n                                        <Placeholder.Line length='full' style={{height: \"auto\"}} />\r\n                                    </Placeholder>\r\n                                </>\r\n                                : <Pie data={pieProps} /> \r\n                                }\r\n                            </div>\r\n                        </Segment>\r\n                        <div className=\"container-arrow right\" onClick={() => { setSemaforCarousel(!semaforCarousel) }}>\r\n                            <Button secondary icon>\r\n                                <Icon size=\"big\" name=\"arrow alternate circle right outline\" />\r\n                            </Button>\r\n                        </div>\r\n                    </Segment.Group>\r\n                    :\r\n                    <Segment.Group horizontal raised className=\"other-data-part2\">\r\n                        <div className=\"container-arrow left\" onClick={() => { setSemaforCarousel(!semaforCarousel) }}>\r\n                            <Button secondary icon>\r\n                                <Icon size=\"big\" name=\"arrow alternate circle left outline\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Segment className=\"single-seg\">\r\n                            <Header as=\"h2\" className=\"title\">Stats</Header>\r\n                            <Segment className=\"child-contributions\">\r\n                                {\r\n                                    Object.keys(yearsSvg).map((year, i) => {\r\n                                        return (\r\n                                        <>                                \r\n                                            <Header as='h3' className=\"subtitle\">\r\n                                                <Icon name=\"calendar alternate outline\" />Year: {year}\r\n                                            </Header>\r\n                                            <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={year} >\r\n                                                <ReactTooltip html />\r\n                                            </GitHubCalendar>\r\n                                            { (yearsSvg[year]) ? <div className=\"stats\" dangerouslySetInnerHTML={{ __html: yearsSvg[year] }}></div> \r\n                                            : \r\n                                            <div className=\"stats\">\r\n                                                <Placeholder style={{width: \"381px\", height: \"175px\", margin: \"15px 0\", borderRadius: \"10px\"}}>\r\n                                                    <Placeholder.Image rectangular active />\r\n                                                </Placeholder>\r\n                                            </div>\r\n                                            }\r\n                                        </>\r\n                                        );\r\n                                    })\r\n                                }\r\n                                {/* <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2022} >\r\n                                    <ReactTooltip html />\r\n                                </GitHubCalendar>\r\n                                {(svg2022) ? <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2022 }}></div>\r\n                                :\r\n                                <div className=\"stats\">\r\n                                    <Placeholder style={{width: \"381px\", height: \"175px\", margin: \"15px 0\", borderRadius: \"10px\"}}>\r\n                                        <Placeholder.Image rectangular active />\r\n                                    </Placeholder>\r\n                                </div>\r\n                                } */}\r\n                                {/*<Header as='h3' className=\"subtitle\">\r\n                                    <Icon name=\"calendar alternate outline\" />Year: 2022\r\n                                </Header>\r\n                                <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2022} >\r\n                                    <ReactTooltip html />\r\n                                </GitHubCalendar>\r\n                                {(svg2022) ? <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2022 }}></div>\r\n                                :\r\n                                <div className=\"stats\">\r\n                                    <Placeholder style={{width: \"381px\", height: \"175px\", margin: \"15px 0\", borderRadius: \"10px\"}}>\r\n                                        <Placeholder.Image rectangular active />\r\n                                    </Placeholder>\r\n                                </div>\r\n                                }\r\n                                <hr />\r\n                                <Header as='h3' className=\"subtitle\">\r\n                                    <Icon name=\"calendar alternate outline\" />Year: 2021\r\n                                </Header>\r\n                                <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2021} >\r\n                                    <ReactTooltip html />\r\n                                </GitHubCalendar>\r\n                                {(svg2021) ? <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2021 }}></div>\r\n                                :\r\n                                <div className=\"stats\">\r\n                                    <Placeholder style={{width: \"381px\", height: \"175px\", margin: \"15px 0\", borderRadius: \"10px\"}}>\r\n                                        <Placeholder.Image rectangular active />\r\n                                    </Placeholder>\r\n                                </div>\r\n                                }\r\n                                <hr />\r\n                                <Header as='h3' className=\"subtitle\">\r\n                                    <Icon name=\"calendar alternate outline\" />Year: 2020\r\n                                </Header>\r\n                                <GitHubCalendar className=\"contributions\" username=\"jcsalinas20\" year={2020} >\r\n                                    <ReactTooltip html />\r\n                                </GitHubCalendar>\r\n                                {(svg2020) ? <div className=\"stats\" dangerouslySetInnerHTML={{ __html: svg2020 }}></div>\r\n                                :\r\n                                <div className=\"stats\">\r\n                                    <Placeholder style={{width: \"381px\", height: \"175px\", margin: \"15px 0\", borderRadius: \"10px\"}}>\r\n                                        <Placeholder.Image rectangular active />\r\n                                    </Placeholder>\r\n                                </div>\r\n                                }*/}\r\n                            </Segment>\r\n                        </Segment>\r\n                    </Segment.Group>\r\n                }\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GitStates;","function Topic(props) {\r\n    const name = props.name;\r\n\r\n    return <span className=\"topic\">{name}</span>;\r\n}\r\n\r\nexport default Topic;","import { Card, Image, Icon, Placeholder } from \"semantic-ui-react\";\r\n\r\nimport Topic from \"./Topic\";\r\n\r\nfunction ProjectCard(props) {\r\n    let repo = \"\";\r\n    let name = \"\";\r\n    let description = \"\";\r\n    let banner = \"\";\r\n    let stars = \"\";\r\n    let topics = \"\";\r\n    let link = \"\";\r\n    if (!props.placeholder) {\r\n        repo = props.repo;\r\n        name = repo.name;\r\n        description = (repo.description) ? (repo.description.length > 55) ? repo.description.substring(0, 55) + \"...\" : repo.description : \"Without description\";\r\n        banner = (repo.banner) ? repo.banner : \"https://is2-ssl.mzstatic.com/image/thumb/Purple115/v4/a5/d7/78/a5d7782e-ea19-f0e7-6af7-97d8611ebfc7/AppIcon-0-1x_U007emarketing-0-7-0-85-220.png/1920x1080bb-80.png\";\r\n        stars = repo.stars;\r\n        topics = repo.topics;\r\n        link = repo.link;\r\n    }\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <div className=\"image\">\r\n                { (props.placeholder) ?\r\n                    <Placeholder>\r\n                        <Placeholder.Image square />\r\n                    </Placeholder>\r\n                :\r\n                    <>\r\n                        <Image src={banner} wrapped ui={false} />\r\n                        <p>{name}</p>\r\n                    </>\r\n                }\r\n            </div>\r\n            <Card.Content>\r\n                <Card.Description title={repo.description}>{description}</Card.Description>\r\n                <div className=\"stars\">\r\n                    <Icon name=\"star outline\" />{stars}\r\n                </div>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                {\r\n                    (!props.placeholder) ?\r\n                        topics.map((topic, index) => {\r\n                            return <Topic key={index} name={topic} />\r\n                        })\r\n                    : \"\"\r\n                }\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import { useEffect, useState } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport linesParticlesOptions from \"../json/linesParticlesOptions.json\";\r\nimport { Header, Segment, Icon, Input, Dropdown } from 'semantic-ui-react';\r\nimport { BarWave } from \"react-cssfx-loading\";\r\n\r\nimport ProjectCard from \"../components/ProjectCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction Projects() {\r\n    const [repos, setRepos] = useState([]);\r\n    const [filter, setFilter] = useState([]);\r\n    const [basicRepos, setBasicRepos] = useState([]);\r\n    const [searcher, setSearcher] = useState([]);\r\n    const [selectedFilterType, setSelectedFilterType] = useState(\"\");\r\n    const [error503, setError503] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setBasicRepos(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/repos/basic`, {\r\n                headers: { Authorization: `${process.env.REACT_APP_JWT_API}` }\r\n            })\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    if (json.status) {\r\n                        setError503(true);\r\n                        return {};\r\n                    }\r\n                    setSearcher(json.repos);\r\n                    return json.repos;\r\n                })\r\n            );\r\n            if (!error503) {\r\n                setRepos(await fetch(`${process.env.REACT_APP_API_DOMAIN}/${process.env.REACT_APP_GIT_USER}/repos`, {\r\n                    headers: { Authorization: `${process.env.REACT_APP_JWT_API}` }\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                        for (const repo of json.repos) {\r\n                            for (const lang of repo.languages) {\r\n                                let validOption = true;\r\n                                for (const filter of filterOptions.lang) {\r\n                                    if (filter.text === lang.name) {\r\n                                        validOption = false;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (validOption) {\r\n                                    filterOptions.lang.push({\r\n                                        key: lang.name.toLowerCase(),\r\n                                        text: lang.name,\r\n                                        value: lang.name.toLowerCase()\r\n                                    });\r\n                                }\r\n                            }\r\n                            for (const topic of repo.topics) {\r\n                                let validOption = true;\r\n                                for (const filter of filterOptions.topics) {\r\n                                    if (filter.text === topic) {\r\n                                        validOption = false;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (validOption) {\r\n                                    filterOptions.topics.push({\r\n                                        key: topic.toLowerCase(),\r\n                                        text: topic,\r\n                                        value: topic.toLowerCase()\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        setFilter(filterOptions);\r\n                        return json.repos;\r\n                    })\r\n                );\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // console.log(\"basic\", basicRepos);\r\n    // console.log(\"all\", repos);\r\n\r\n    let filterOptions = {\r\n        type: [{\r\n            key: \"owner\",\r\n            text: \"Owner\",\r\n            value: \"owner\"\r\n        }, {\r\n            key: \"collaborator\",\r\n            text: \"Collaborator\",\r\n            value: \"collaborator\"\r\n        }, {\r\n            key: \"organization\",\r\n            text: \"Organization\",\r\n            value: \"organization\"\r\n        }],\r\n        lang: [],\r\n        topics: [],\r\n        stars: [{\r\n            key: \"asc\",\r\n            text: \"Asc\",\r\n            value: \"asc\"\r\n        }, {\r\n            key: \"desc\",\r\n            text: \"Desc\",\r\n            value: \"desc\"\r\n        }],\r\n        isarchived: [{\r\n            key: \"is\",\r\n            text: \"Is\",\r\n            value: \"is\"\r\n        }, {\r\n            key: \"isnot\",\r\n            text: \"Is not\",\r\n            value: \"isnot\"\r\n        }],\r\n        rel: [{\r\n            key: \"hasrel\",\r\n            text: \"Has\",\r\n            value: \"hasrel\"\r\n        }, {\r\n            key: \"nothasrel\",\r\n            text: \"Not has\",\r\n            value: \"nothasrel\"\r\n        }],\r\n        issues: [{\r\n            key: \"has\",\r\n            text: \"Has\",\r\n            value: \"has\"\r\n        }, {\r\n            key: \"nothasissues\",\r\n            text: \"Not has\",\r\n            value: \"nothasissues\"\r\n        }]\r\n    };\r\n\r\n    const filterTypeOptions = [\r\n        {\r\n            key: \"type\",\r\n            text: \"Type\",\r\n            value: \"type\",\r\n        },\r\n        {\r\n            key: \"lang\",\r\n            text: \"Languages\",\r\n            value: \"lang\",\r\n        },\r\n        {\r\n            key: \"topics\",\r\n            text: \"Topics\",\r\n            value: \"topics\",\r\n        },\r\n        {\r\n            key: \"stars\",\r\n            text: \"Stars\",\r\n            value: \"stars\",\r\n        },\r\n        {\r\n            key: \"isarchived\",\r\n            text: \"is Archived\",\r\n            value: \"isarchived\",\r\n        },\r\n        {\r\n            key: \"rel\",\r\n            text: \"Has Releases\",\r\n            value: \"rel\",\r\n        },\r\n        {\r\n            key: \"issues\",\r\n            text: \"Have Issues\",\r\n            value: \"issues\",\r\n        },\r\n    ];\r\n\r\n    function handleChangeSearch(e) {\r\n        let arrayRepos = [];\r\n        for (const repo of basicRepos) {\r\n            if (repo.name.toLowerCase().includes(e.target.value.toLowerCase())) {\r\n                arrayRepos.push(repo);\r\n            }\r\n        }\r\n        setSearcher(arrayRepos);\r\n    }\r\n\r\n    function onHandleChangeFilterType(e, target) {\r\n        setSelectedFilterType(target.value);\r\n    }\r\n\r\n    function onHandleChangeFilterOptions(e, target) {\r\n        let arrayRepos = [];\r\n        for (const repo of repos) {\r\n            if (target.value === \"\") {\r\n                arrayRepos.push(repo);\r\n            } else {\r\n                if (selectedFilterType === \"type\") {\r\n                    if (target.value.indexOf(repo.type) !== -1) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else if (selectedFilterType === \"lang\") {\r\n                    let check = true;\r\n                    for (const lang of target.value) {\r\n                        if (!repo.languages.some(item => item.name.toLowerCase() === lang)) {\r\n                            check = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (check) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else if (selectedFilterType === \"topics\") {\r\n                    let check = true;\r\n                    for (const topic of target.value) {\r\n                        if (repo.topics.indexOf(topic) === -1) {\r\n                            check = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (check) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else if (selectedFilterType === \"isarchived\") {\r\n                    if (target.value === \"is\" && repo.isArchived) {\r\n                        arrayRepos.push(repo);\r\n                    } else if (target.value === \"isnot\" && !repo.isArchived) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else if (selectedFilterType === \"rel\") {\r\n                    if (target.value === \"hasrel\" && repo.releases.length > 0) {\r\n                        arrayRepos.push(repo);\r\n                    } else if (target.value === \"nothasrel\" && repo.releases.length === 0) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else if (selectedFilterType === \"issues\") {\r\n                    if (target.value === \"has\" && repo.issues.total > 0) {\r\n                        arrayRepos.push(repo);\r\n                    } else if (target.value === \"nothasissues\" && repo.issues.total === 0) {\r\n                        arrayRepos.push(repo);\r\n                    }\r\n                } else {\r\n                    arrayRepos.push(repo);\r\n                }\r\n            }\r\n        }\r\n        if (selectedFilterType === \"stars\") {\r\n            arrayRepos.sort(function (a, b) {\r\n                return (target.value === \"desc\") ? a.stars - b.stars : b.stars - a.stars;\r\n            });\r\n        }\r\n        setSearcher(arrayRepos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-projects\" id=\"projects\">\r\n            <Header as='h1'>\r\n                <div className=\"title\">\r\n                    <Icon name='github' />\r\n                    My Projects\r\n                </div>\r\n                <div className=\"search\">\r\n                    <Input icon=\"search\" iconPosition=\"left\" size=\"mini\" placeholder=\"Search by name\" onChange={handleChangeSearch} />\r\n                </div>\r\n                <div className=\"filter\">\r\n                    <Dropdown\r\n                        className=\"filter-selector\"\r\n                        placeholder=\"Select Filter\"\r\n                        fluid\r\n                        selection\r\n                        defaultValue={filterTypeOptions[0]}\r\n                        onChange={onHandleChangeFilterType}\r\n                        options={filterTypeOptions}\r\n                    />\r\n                    {\r\n                        (selectedFilterType === \"type\" ||\r\n                            selectedFilterType === \"lang\" ||\r\n                            selectedFilterType === \"topics\") ?\r\n                            (filter[selectedFilterType] === undefined) ?\r\n                                <Dropdown\r\n                                    loading\r\n                                    disabled\r\n                                    clearable\r\n                                    fluid\r\n                                    multiple\r\n                                    search\r\n                                    selection\r\n                                    onChange={onHandleChangeFilterOptions}\r\n                                    options={filter[selectedFilterType]}\r\n                                    placeholder=\"Select Options\"\r\n                                />\r\n                            :\r\n                                <Dropdown\r\n                                    clearable\r\n                                    fluid\r\n                                    multiple\r\n                                    search\r\n                                    selection\r\n                                    onChange={onHandleChangeFilterOptions}\r\n                                    options={filter[selectedFilterType]}\r\n                                    placeholder=\"Select Options\"\r\n                                />\r\n                        :\r\n                            <Dropdown\r\n                                clearable\r\n                                fluid\r\n                                search\r\n                                selection\r\n                                onChange={onHandleChangeFilterOptions}\r\n                                options={filter[selectedFilterType]}\r\n                                placeholder=\"Select Option\"\r\n                            />\r\n                    }\r\n                </div>\r\n            </Header>\r\n            <Segment color=\"blue\" className=\"projects\">\r\n                {/* <Loading color=\"white\" /> */}\r\n                <div className=\"background-particles\">\r\n                    {/* {(repos) ? \r\n                        <Particles\r\n                            id=\"tsparticles2\"\r\n                            options={linesParticlesOptions}\r\n                        />\r\n                        : \"\"\r\n                    } */}\r\n                    {\r\n                    (searcher.length === 0) ?\r\n                        <>\r\n                            <ProjectCard\r\n                                key={0}\r\n                                placeholder={true}\r\n                            />\r\n                            <ProjectCard\r\n                                key={1}\r\n                                placeholder={true}\r\n                            />\r\n                            <ProjectCard\r\n                                key={2}\r\n                                placeholder={true}\r\n                            />\r\n                            <ProjectCard\r\n                                key={3}\r\n                                placeholder={true}\r\n                            />\r\n                            <ProjectCard\r\n                                key={4}\r\n                                placeholder={true}\r\n                            />\r\n                            <ProjectCard\r\n                                key={5}\r\n                                placeholder={true}\r\n                            />\r\n                        </>\r\n                    :\r\n                        searcher.map((repo, key) => {\r\n                            return (\r\n                                <ProjectCard\r\n                                    key={key}\r\n                                    repo={repo}\r\n                                    placeholder={false}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React, { Component } from \"react\";\r\n\r\nimport Welcome from \"./Welcome\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport GitStates from \"./GitStates\";\r\nimport Projects from \"./Projects\";\r\n\r\nimport \"./_home.scss\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Welcome />\r\n                <AboutMe />\r\n                <GitStates />\r\n                <Projects />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/:something\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}